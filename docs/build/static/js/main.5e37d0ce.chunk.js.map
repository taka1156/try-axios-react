{"version":3,"sources":["constants/router.js","components/Navigation/Navigation.jsx","constants/index.js","components/github/Forms/Forms.jsx","logic/getRepos.js","page/GithubRepos.jsx","components/qiita/Forms/Forms.jsx","components/qiita/Table/Tables.jsx","components/Spinner/Spinner.jsx","components/qiita/Display/Display.jsx","logic/getArticles.js","page/SearchArticle.jsx","routes/index.jsx","reportWebVitals.js","index.js"],"names":["routesNav","name","path","Navigation","className","map","route","i","to","keyWordList","generateIndex","end","Array","keys","index","value","Forms","props","useState","userName","setUserName","maxPage","setMaxPage","onSubmit","e","preventDefault","setSearchInfo","submitFunc","htmlFor","id","type","placeholder","onChange","target","generateGithubURL","maxIndex","getRepos","a","url","axios","get","then","data","repo","description","forks_count","stargazers_count","full_name","language","pushed_at","catch","console","error","GithubRepos","getGithubRepos","lang","searchResult","log","keywords","tag","setTag","list","word","Tables","selectedTag","article","title","tags","likes_count","created_at","updated_at","comments_count","user","tagStr","filtedTags","filter","tagName","slice","reduce","accum","current","shapeTags","colSpan","href","width","Spinner","Display","articles","length","generateQiitaURL","getArticles","sort","b","SearchArticle","setSelectedTag","result","setResult","getQiitaArticles","routes","exact","children","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","BASE_URL","document","getElementById"],"mappings":"gRAAMA,EAAY,CAChB,CACEC,KAAM,QACNC,KAAM,KAER,CACED,KAAM,SACNC,KAAM,a,eCgBKC,EAlBI,WACjB,OACE,8BACE,8BACE,oBAAIC,UAAU,MAAd,SACGJ,EAAUK,KAAI,SAACC,EAAOC,GAAR,OACb,oBAAqBH,UAAU,YAA/B,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkBI,GAAIF,EAAMJ,KAA5C,SACGI,EAAML,QAFX,cAAgBM,c,uCCXtBE,EAAc,CAClB,SACA,aACA,OACA,MACA,QACA,MACA,MACA,UACA,OACA,QACA,SACA,QACA,UACA,MACA,MACA,QACA,SACA,UACA,QACA,KACA,MACA,MACA,UACA,2BACA,QACA,qBACA,OACA,SACA,SACA,SACA,cACA,UACA,cACA,UACA,SACA,SACA,OACA,MACA,eACA,QACA,aACA,YACA,SACA,QACA,IACA,SACA,QACA,IACA,SACA,cACA,QACA,QACA,SACA,aACA,aACA,cACA,UACA,SACA,QACA,MACA,MACA,UACA,SACA,SACA,aACA,kBACA,YACA,MACA,SACA,aACA,WACA,UACA,UACA,QACA,QACA,SACA,yDACA,MACA,gBACA,SACA,aACA,mBACA,UACA,SACA,MACA,QACA,SACA,qBACA,OACA,WACA,iBACA,eACA,UACA,OACA,sBACA,MACA,SACA,QACA,YACA,UACA,SCjGIC,EAAgB,WAAe,IAAdC,EAAa,uDAAP,GACzB,OAAO,YAAI,IAAIC,MAAMD,EAAI,IAAIE,QAAQR,KAAI,SAACE,GACxC,IAAMO,EAAkB,IAATP,EAAI,GACjB,OACE,wBAAoBQ,MAAOD,EAA3B,SACGA,GADUA,OAoDRE,EA7CD,SAACC,GACb,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAQA,OACE,uBAAMC,SAAU,SAACC,GAAD,OAPC,SAACA,GAClBA,EAAEC,iBACFR,EAAMS,cAAcP,EAAUE,GAKPM,CAAWH,IAAlC,UACE,sBAAKpB,UAAU,qBAAf,UACE,uBAAO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","file":"static/js/main.5e37d0ce.chunk.js","sourcesContent":["const routesNav = [\n  {\n    name: 'qiita',\n    path: '/',\n  },\n  {\n    name: 'github',\n    path: './github',\n  },\n];\n\nexport { routesNav };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { routesNav } from '../../constants/router';\nimport './Navigation.css';\n\nconst Navigation = () => {\n  return (\n    <div>\n      <nav>\n        <ul className=\"nav\">\n          {routesNav.map((route, i) => (\n            <li key={`nav_${i}`} className=\"nav__item\">\n              <Link className=\"nav__item--link\" to={route.path}>\n                {route.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navigation;\n","const keyWordList = [\n  'Python',\n  'JavaScript',\n  'Ruby',\n  'PHP',\n  'Rails',\n  'iOS',\n  'AWS',\n  'Android',\n  'Java',\n  'Swift',\n  'Docker',\n  'Linux',\n  'Node.js',\n  'Git',\n  'Mac',\n  'Unity',\n  'Csharp',\n  'Python3',\n  'MySQL',\n  'Go',\n  'C++',\n  'CSS',\n  'Windows',\n  '機械学習',\n  'Xcode',\n  '初心者',\n  'HTML',\n  'Ubuntu',\n  'CentOS',\n  'GitHub',\n  'RaspberryPi',\n  'Laravel',\n  'Objective-C',\n  'Vagrant',\n  'Vue.js',\n  'jQuery',\n  'Bash',\n  'Vim',\n  'DeepLearning',\n  'React',\n  'TypeScript',\n  'WordPress',\n  'golang',\n  'Scala',\n  'R',\n  'MacOSX',\n  'HTML5',\n  'C',\n  'Kotlin',\n  'RubyOnRails',\n  'nginx',\n  'Slack',\n  'Heroku',\n  'TensorFlow',\n  'PostgreSQL',\n  'ShellScript',\n  'centos7',\n  'lambda',\n  'Azure',\n  'SQL',\n  'IoT',\n  'Ansible',\n  'Django',\n  'Apache',\n  'kubernetes',\n  'MachineLearning',\n  'Windows10',\n  'SSH',\n  'iPhone',\n  'VirtualBox',\n  'Firebase',\n  'Haskell',\n  'Arduino',\n  'Excel',\n  'Emacs',\n  'OpenCV',\n  '新人プログラマ応援',\n  'EC2',\n  'AndroidStudio',\n  'Chrome',\n  'PowerShell',\n  'GoogleAppsScript',\n  'reactjs',\n  'VSCode',\n  'api',\n  'Qiita',\n  'Elixir',\n  'ポエム',\n  'JSON',\n  'homebrew',\n  'docker-compose',\n  '数学',\n  'Twitter',\n  'Perl',\n  'GoogleCloudPlatform',\n  'npm',\n  'oracle',\n  'shell',\n  'AngularJS',\n  'webpack',\n  'babel',\n];\n\nconst MaxIndex = 100;\n\nexport {\n  keyWordList,\n  MaxIndex\n};\n","import React, { useState } from 'react';\nimport { MaxIndex } from '../../../constants/';\n\n// 1 ~ end (per 10)\nconst generateIndex = (end = 50) => {\n    return [...new Array(end/10).keys()].map((i) => {\n      const index = (i + 1) * 10;\n        return (\n          <option key={index} value={index}>\n            {index}\n          </option>\n        );\n      });\n  };\n\nconst Forms = (props) => {\n  const [userName, setUserName] = useState('');\n  const [maxPage, setMaxPage] = useState(10);\n\n  const submitFunc = (e) => {\n    e.preventDefault();\n    props.setSearchInfo(userName, maxPage);\n  };\n  \n\n  return (\n    <form onSubmit={(e) => submitFunc(e)}>\n      <div className=\"d-flex flex-column\">\n        <label htmlFor=\"user-name\">user name</label>\n        <input\n          id=\"user-name\"\n          type=\"text\"\n          placeholder=\"github user name\"\n          className=\"col-10 mx-auto form-group form-control\"\n          onChange={(e) => {\n            setUserName(e.target.value);\n          }}\n        />\n      </div>\n      <div className=\"d-flex flex-column\">\n        <label htmlFor=\"max-index\">MaxIndex</label>\n        <select\n          id=\"max-index\"\n          className=\"col-10 mx-auto form-group form-control\"\n          onChange={(e) => {\n            setMaxPage(e.target.value);\n          }}\n        >\n          {generateIndex(MaxIndex)}\n        </select>\n      </div>\n      <input\n        type=\"submit\"\n        className=\"col-4 mx-auto form-group btn btn-outline-light\"\n        value=\"確定\"\n      />\n    </form>\n  );\n};\n\nexport default Forms;\n","import axios from 'axios';\n\nconst generateGithubURL = (userName, maxIndex) => {\n  return `https://api.github.com/users/${userName}/repos?page=1&per_page=${maxIndex}`;\n};\n\nconst getRepos = async (userName, maxIndex) => {\n  const url = generateGithubURL(userName, maxIndex);\n  return await axios\n    .get(url)\n    .then(({ data }) => {\n      return data.map((repo) => {\n          const {url, description, forks_count, stargazers_count, full_name, language, pushed_at} = repo;\n          return {url, description, forks_count, stargazers_count, full_name, language, pushed_at}\n      });\n    })\n    .catch((e) => {\n      console.error(e);\n    });\n};\n\nexport { getRepos };\n","import React from 'react';\nimport Forms from '../components/github/Forms/Forms';\n// import Display from '../components/github/Display/Display';\nimport { getRepos } from '../logic/getRepos';\n\nconst GithubRepos = () => {\n  // const [selectedLang, setSelectedLang] = useState('');\n  //const [result, setResult] = useState([]);\n\n  const getGithubRepos = async (lang) => {\n    //setResult([]);\n    //setSelectedLang(lang);\n    const searchResult = await getRepos(lang);\n    console.log(searchResult);\n    //setResult([...searchResult]);\n  };\n\n  //<Display selectedLang={selectedLang} repos={result} />\n\n  return (\n    <>\n      <Forms\n        setSearchInfo={(userName) => {\n          getGithubRepos(userName);\n        }}\n      />\n      \n    </>\n  );\n};\n\nexport default GithubRepos;\n","import React, { useState } from 'react';\nimport { keyWordList, MaxIndex } from '../../../constants/';\n\n// セレクタの内容生成\nconst generateWord = (keywords) => {\n  return keywords.map((word) => <option key={word}>{word}</option>);\n};\n\n// 1 ~ end (per 10)\nconst generateIndex = (end = 50) => {\n  return [...new Array(end/10).keys()].map((i) => {\n    const index = (i + 1) * 10;\n      return (\n        <option key={index} value={index}>\n          {index}\n        </option>\n      );\n    });\n};\n\nconst Forms = (props) => {\n  const [tag, setTag] = useState('React');\n  const [maxPage, setMaxPage] = useState(10);\n\n  const submitFunc = (e) => {\n    e.preventDefault();\n    props.setSearchInfo(tag, maxPage);\n  };\n\n  return (\n    <form onSubmit={(e) => submitFunc(e)}>\n      <div className=\"d-flex flex-column\">\n        <label htmlFor=\"keyword\">KeyWord</label>\n        <input\n          id=\"keyword\"\n          type=\"text\"\n          value={tag}\n          className=\"col-10 mx-auto form-group form-control\"\n          list=\"key-word-list\"\n          onChange={(e) => {\n            setTag(e.target.value);\n          }}\n        />\n        <datalist id=\"key-word-list\">{generateWord(keyWordList)}</datalist>\n      </div>\n      <div className=\"d-flex flex-column\">\n        <label htmlFor=\"max-index\">MaxIndex</label>\n        <select\n          id=\"max-index\"\n          className=\"col-10 mx-auto form-group form-control\"\n          onChange={(e) => {\n            setMaxPage(e.target.value);\n          }}\n        >\n          {generateIndex(MaxIndex)}\n        </select>\n      </div>\n\n      <input\n        type=\"submit\"\n        className=\"col-4 mx-auto form-group btn btn-outline-light\"\n        value=\"確定\"\n      />\n    </form>\n  );\n};\n\nexport default Forms;\n","import React from 'react';\nimport './Table.css';\n\nconst shapeTags = (selectedTag, tags) => {\n  const flatedTags = tags.map((tag) => tag.name);\n  const filtedTags = flatedTags.filter((tagName) => tagName !== selectedTag);\n  let shapedTags = [...filtedTags.slice(0, 3)].reduce(\n    (accum, current) => accum + ` ${current}`,\n    ''\n  );\n  return shapedTags;\n};\n\nconst Tables = (props) => {\n  const { selectedTag, article } = props;\n\n  const {\n    id,\n    title,\n    tags,\n    likes_count,\n    created_at,\n    updated_at,\n    url,\n    comments_count,\n    user,\n  } = article;\n\n  let tagStr = shapeTags(selectedTag, tags);\n\n  return (\n    <table key={id} className=\"text table table-hover\">\n      <thead>\n        <tr>\n          <th colSpan=\"2\">\n            <a href={url}>{title}</a>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th width=\"10%\">Writer</th>\n          <th>{user.name}</th>\n        </tr>\n        <tr>\n          <th width=\"10%\">Good</th>\n          <th>{likes_count}</th>\n        </tr>\n        <tr>\n          <th width=\"10%\">Created</th>\n          <th>{created_at}</th>\n        </tr>\n        <tr>\n          <th width=\"10%\">Updated</th>\n          <th>{updated_at}</th>\n        </tr>\n        <tr>\n          <th width=\"10%\">Comments</th>\n          <th>{comments_count}</th>\n        </tr>\n        <tr>\n          <th width=\"10%\">Other Tags</th>\n          <th>{tagStr}</th>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default Tables;\n","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return <div className=\"spinner\"></div>;\n};\n\nexport default Spinner;\n","import React from 'react';\nimport Tables from '../Table/Tables';\nimport Spinner from '../../Spinner/Spinner';\n\nconst Display = (props) => {\n  const { selectedTag, articles } = props;\n\n  const visible = () => {\n    if (articles.length !== 0) {\n      // 記事表示ができる\n      return (\n        <div className=\"jumbotron\">\n          <div className=\"container\">\n            {articles.map((article) => {\n              return (\n                <Tables\n                  key={article.id}\n                  selectedTag={selectedTag}\n                  article={article}\n                />\n              );\n            })}\n          </div>\n        </div>\n      );\n    } else {\n      // 記事表示できない\n      return <Spinner />;\n    }\n  };\n\n  return <>{visible()}</>;\n};\n\nexport default Display;\n","import axios from 'axios';\n\nconst generateQiitaURL = (tag, maxIndex) => {\n  return `https://qiita.com/api/v2/tags/${tag}/items?page=1&per_page=${maxIndex}`;\n};\n\nconst sortArticle = (articles) => {\n  return articles.sort((a, b) => b.likes_count - a.likes_count);\n};\n\nconst getArticles = async (tag, maxIndex) => {\n  const url = generateQiitaURL(tag, maxIndex);\n  return await axios\n    .get(url)\n    .then(({ data }) => sortArticle(data))\n    .catch((e) => {\n      console.error(e);\n    });\n};\n\nexport { getArticles };\n","import React, { useState } from 'react';\nimport Forms from '../components/qiita/Forms/Forms';\nimport Display from '../components/qiita/Display/Display';\nimport { getArticles } from '../logic/getArticles';\n\nconst SearchArticle = () => {\n  const [selectedTag, setSelectedTag] = useState('');\n  const [result, setResult] = useState([]);\n\n  const getQiitaArticles = async (tag, maxPage) => {\n    setResult([]) // 初期化\n    setSelectedTag(tag); // other tag 除外\n    const searchResult = await getArticles(tag, maxPage);\n    setResult([...searchResult]);\n    // Object.is変更検知\n  };\n\n  return (\n    <>\n      <Forms\n        setSearchInfo={(tag, maxPage) => getQiitaArticles(tag, maxPage)}\n      />\n      <Display selectedTag={selectedTag} articles={result} />\n    </>\n  );\n};\n\nexport default SearchArticle;\n","import React from 'react'\nimport Github from '../page/GithubRepos'\nimport Qiita from '../page/SearchArticle'\n\nconst routes = [\n  {\n    path: '/',\n    exact: true,\n    children: <Qiita />,\n  },\n  {\n    path: '/github',\n    exact: true,\n    children: <Github />,\n  },\n];\n\nexport {routes};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navigation from './components/Navigation/Navigation';\nimport { routes } from './routes/index';\nimport './App.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"App\">\n      <BrowserRouter basename={process.env.BASE_URL}>\n        <Navigation />\n        <header className=\"App-header\">\n          <Switch>\n            {routes.map((route) => (\n              <Route key={route.path} {...route} />\n            ))}\n          </Switch>\n        </header>\n      </BrowserRouter>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}